// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using VirtualClassroom.Persistence.EF;

namespace VirtualClassroom.Persistence.EF.Migrations
{
    [DbContext(typeof(DummyDbContext))]
    [Migration("20180430080508_Domain")]
    partial class Domain
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VirtualClassroom.Domain.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ActivityTypeId");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("ProfessorId");

                    b.Property<int?>("StudentId");

                    b.HasKey("Id");

                    b.HasIndex("ActivityTypeId");

                    b.HasIndex("ProfessorId");

                    b.HasIndex("StudentId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("VirtualClassroom.Domain.ActivityInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ActivityId");

                    b.Property<int>("Grade");

                    b.Property<int>("OccurenceDateId");

                    b.Property<bool>("Presence");

                    b.Property<int>("Student");

                    b.Property<int?>("StudentId");

                    b.HasKey("Id");

                    b.HasIndex("OccurenceDateId");

                    b.HasIndex("StudentId");

                    b.ToTable("ActivityInfo");
                });

            modelBuilder.Entity("VirtualClassroom.Domain.ActivityOccurence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ActivityId");

                    b.Property<DateTime>("OccurenceDate");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("ActivityOccurence");
                });

            modelBuilder.Entity("VirtualClassroom.Domain.ActivityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("ActivityType");
                });

            modelBuilder.Entity("VirtualClassroom.Domain.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Professors");
                });

            modelBuilder.Entity("VirtualClassroom.Domain.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("VirtualClassroom.Domain.Activity", b =>
                {
                    b.HasOne("VirtualClassroom.Domain.ActivityType", "ActivityType")
                        .WithMany()
                        .HasForeignKey("ActivityTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VirtualClassroom.Domain.Professor")
                        .WithMany("Activities")
                        .HasForeignKey("ProfessorId");

                    b.HasOne("VirtualClassroom.Domain.Student")
                        .WithMany("Activities")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("VirtualClassroom.Domain.ActivityInfo", b =>
                {
                    b.HasOne("VirtualClassroom.Domain.ActivityOccurence", "OccurenceDate")
                        .WithMany()
                        .HasForeignKey("OccurenceDateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VirtualClassroom.Domain.Student")
                        .WithMany("ActivityInfos")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("VirtualClassroom.Domain.ActivityOccurence", b =>
                {
                    b.HasOne("VirtualClassroom.Domain.Activity", "Activity")
                        .WithMany("OccurenceDates")
                        .HasForeignKey("ActivityId");
                });
#pragma warning restore 612, 618
        }
    }
}
