@using VirtualClassroom.Core.Shared
@model VirtualClassroom.Models.ProfessorViewModels.ActivityAddVM
@inject IActivityServices activityServices
@inject IStudentServices studentServices

@{
    ViewData["Title"] = "ActivityAdd";
}

<h2>Create Activity</h2>
<hr />
<div class="row">
        <form asp-action="ActivityAdd">
            <div class="col-md-4">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                    <input asp-for="Description" class="form-control" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>

                <div class="form-group">
                    @{
                        List<SelectListItem> listItems = new List<SelectListItem>();
                        foreach (var activityType in activityServices.GetAllActivityTypes())
                        {
                            listItems.Add(new SelectListItem
                            {
                                Text = activityType.Name,
                                Value = activityType.Name
                            });
                        }
                    }
                    <label asp-for="ActivityTypeName"></label>
                    @Html.DropDownList("ActivityTypeName", listItems, new { @class = "form-control" })
                    <span asp-validation-for="ActivityTypeName" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="OccurenceDates"></label>
                    <select asp-for="OccurenceDates" class="form-control" id="activity-occurence" multiple>
                        @foreach (var occurenceDate in Model.OccurenceDates)
                        {
                            <option value="@occurenceDate">@String.Format("{0:dd.MM.yyyy - hh:mm}", occurenceDate)</option>
                        }
                    </select>
                    <span asp-validation-for="OccurenceDates" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <div class="col">
                        <div class="input-group date" id="datetime-picker">
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                            <input type="text" class="form-control" />
                            <div class="input-group-btn">
                                <button type="button" class="btn btn-default" id="datetime-picker__add">Add Date</button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>

            </div>

            <div class="col-md-4">
                <div class="form-group">
                    <label asp-for="StudentsId"></label>
                    <select asp-for="StudentsId" class="form-control" id="students" multiple>
                        @foreach (var studentId in Model.StudentsId)
                        {
                            var student = studentServices.GetStudent(studentId);
                            <option value="@studentId">@String.Format("{0} {1}", student.FirstName, student.LastName)</option>
                        }
                    </select>
                    <span asp-validation-for="StudentsId" class="text-danger"></span>
                </div>
            </div>
    </form>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <script type="text/javascript">
            $(function () {
                const datePickerEl = $("#datetime-picker");
                const datePickerAddBtnEl = $("#datetime-picker__add");
                const activityOccurenceEl = $("#activity-occurence");

                datePickerEl.datetimepicker({ locale: "en", format: "L LT" });

                datePickerAddBtnEl.on("click", (event) => {
                    const dates = activityOccurenceEl.children("option").map(function () { return $(this).val(); }).get();
                    const pickerDate = $(datePickerEl).find("input").val();

                    if (dates.includes(pickerDate) || !pickerDate) {
                        return;
                    }

                    let option = $("<option>");

                    option.val(pickerDate);
                    option.text(pickerDate);

                    activityOccurenceEl.append(option);
                    $("#activity-occurence option").prop("selected", true);
                });

                $("#activity-occurence option").on("mousedown", function (event) {
                    event.preventDefault();
                    $(this).prop("selected", $(this).prop("selected"));

                    return false;
                });
                
                $("#students option").on("mousedown", function (event) {
                    event.preventDefault();

                    $(this).prop("selected", $(this).prop("selected") ? false : true);

                    return false;
                });
            });
    </script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
